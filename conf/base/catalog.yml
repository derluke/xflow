# experiments:
#   type: kedro_datasets.pandas.CSVDataset
#   filepath: include/x_flow/config/experiments.csv

# param_mapping:
#   type: kedro_datasets.yaml.YAMLDataset
#   filepath: include/x_flow/config/param_mapping.yml

"experiment.{variant}.use_case_id":
  type: kedro_datasets.json.JSONDataset
  filepath: data/outputs/experiments/{variant}/use_case_id.json
  metadata:
    kedro-viz:
      layer: DataRobot
      preview: true

dataset_id:
  type: kedro_datasets.text.TextDataset
  filepath: data/outputs/dataset_id.txt

raw_data_train:
  type: kedro_datasets.pandas.CSVDataset
  filepath: include/x_flow/raw_data/DR_Demo_Bond_trading_RFQ_train.csv
  metadata:
    kedro-viz:
      layer: Raw Data

raw_data_test:
  type: kedro_datasets.pandas.CSVDataset
  filepath: include/x_flow/raw_data/DR_Demo_Bond_trading_RFQ_test.csv
  metadata:
    kedro-viz:
      layer: Raw Data

autopilot_run:
  type: kedro_datasets.text.TextDataset
  filepath: include/x_flow/autopilot_run/autopilot_run.txt
  metadata:
    kedro-viz:
      layer: DataRobot

"experiment.{variant}.project_dict":
  type: kedro_datasets.yaml.YAMLDataset
  filepath: "data/outputs/experiments/{variant}/project_dicts/project_dict.yml"
  metadata:
    kedro-viz:
      layer: DataRobot
  # dataset:
  #   type: kedro_datasets.yaml.YAMLDataset
  # filename_suffix: ".yml"

"experiment.{variant}.backtest":
  type: partitions.IncrementalDataset
  path: "data/outputs/experiments/{variant}/backtest/"
  dataset:
    type: x_flow.utils.data.XFlowDataset
    load_args:
      load_class: "ValidationPredictionData"
  filename_suffix: ".csv"
  metadata:
    kedro-viz:
      layer: DataRobot

"experiment.{variant}.holdout":
  type: partitions.IncrementalDataset
  path: "data/outputs/experiments/{variant}/holdout/"
  dataset:
    type: x_flow.utils.data.XFlowDataset
    load_args:
      load_class: "ValidationPredictionData"
  filename_suffix: ".csv"

"experiment.{variant}.external_holdout":
  type: partitions.IncrementalDataset
  path: data/outputs/experiments/{variant}/external_holdout/
  dataset:
    type: x_flow.utils.data.XFlowDataset
    load_args:
      load_class: "ValidationPredictionData"
  filename_suffix: ".csv"
  metadata:
    kedro-viz:
      layer: DataRobot

"measure.{variant}.{data_subset}_metrics":
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/outputs/metrics/{data_subset}/{variant}/data.csv
  metadata:
    kedro-viz:
      layer: DataRobot

# "measure.{variant}.backtest_metric":
#   type: kedro_datasets.pandas.CSVDataset
#   filepath: data/outputs/metrics/backtest/{variant}/data.csv

# "measure.{variant}.external_holdout_metrics":
#   type: kedro_datasets.pandas.CSVDataset
#   filepath: data/outputs/metrics/external_holdout/{variant}/data.csv

"measure.{variant}.{data_subset}_metrics_grouped":
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/outputs/metrics_grouped/{data_subset}/{variant}/data.csv
  metadata:
    kedro-viz:
      layer: Measure

# "measure.{variant}.backtest_metrics_grouped":
#   type: kedro_datasets.pandas.CSVDataset
#   filepath: data/outputs/metrics_grouped/backtest/{variant}/data.csv

# "measure.{variant}.external_holdout_metrics_grouped":
#   type: kedro_datasets.pandas.CSVDataset
#   filepath: data/outputs/metrics_grouped/external_holdout/{variant}/data.csv

"measure.{variant}.best_models":
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/outputs/experiments/{variant}/models/best_model.csv
  metadata:
    kedro-viz:
      layer: Measure

"deploy.{variant}.deployments":
  type: kedro_datasets.yaml.YAMLDataset
  filepath: data/outputs/experiments/{variant}/deployments/deployments.yml
  metadata:
    kedro-viz:
      layer: Production

collect.deployments_combined:
  type: MemoryDataset
  metadata:
    kedro-viz:
      layer: Result

collect.external_holdout_metrics_combined:
  type: MemoryDataset

collect.backtest_metrics_combined:
  type: MemoryDataset

collect.holdout_metrics_combined:
  type: MemoryDataset

collect.collected_deployments:
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/outputs/collected_deployments.csv
  metadata:
    kedro-viz:
      layer: Result

collect.leaderboard:
  type: kedro_datasets.pandas.CSVDataset
  filepath: data/outputs/leaderboard.csv
  metadata:
    kedro-viz:
      layer: Result

"{node}_checksum":
  type: kedro_datasets.text.TextDataset
  filepath: data/outputs/checksums/{node}.txt
